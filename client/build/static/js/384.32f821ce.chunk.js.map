{"version":3,"file":"static/js/384.32f821ce.chunk.js","mappings":"ySAUMA,GAAaC,EAAAA,EAAAA,KAAS,WAC1B,OAA4BC,EAAAA,EAAAA,UAAS,CAACC,KAAM,KAA5C,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAiCE,EAAAA,EAAAA,YAAWC,EAAAA,GAArCC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,YAClB,GAAkCT,EAAAA,EAAAA,UAAS,CACzCU,MAAM,EACNC,QAAS,KAFX,eAAOC,EAAP,KAAkBC,EAAlB,KAKMC,GAA6BC,EAAAA,EAAAA,cACjC,YACEC,EAAAA,EAAAA,IAAmB,KAAM,KAAM,MAAO,GAAGC,MAAK,SAAAC,GAC5CT,EAAYU,cAAcD,EAAKE,OAC/BX,EAAYY,WAAWH,EAAKI,WAGhC,IASF,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAepB,GAAIa,MAAK,SAAAf,GAAM,OAAIC,EAAUD,MACzCM,EAAUiB,aAAaX,MACzB,KAID,UAAC,IAAD,CAAWY,UAAU,OAAOC,MAAO,CAACC,SAAU,YAA9C,WACE,UAAC,IAAD,YACE,SAAC,IAAD,CAAKC,GAAI,EAAT,UACE,SAAC,IAAD,CAAOC,MAAO,IAAKC,OAAQ,IAAKC,IAAKC,yBAAgC/B,EAAOgC,SAE9E,SAAC,IAAD,CAAKL,GAAI,EAAT,UACE,UAAC,IAAD,CAAKH,UAAU,wCAAf,WACE,wBAAKxB,EAAOiC,QACZ,gBACET,UAAU,mDACVC,MAAO,CAAES,WAAW,OAAD,OAASC,EAAT,6BAA6CP,MAAO,IAAKC,OAAQ,IAAKO,eAAgB,QAASC,SAAU,IAF9H,SAIGrC,EAAOsC,eAId,SAAC,IAAD,CAAKX,GAAI,EAAT,UACE,UAAC,IAAD,CACEH,UAAU,+DACVC,MAAO,CAAEG,MAAO,IAAKC,OAAQ,IAAKQ,SAAU,GAAIE,OAAQ,uBAF1D,WAIE,iDAAUvC,EAAOwC,MAAjB,0BACCjC,EAAYkC,QAAQC,MAAK,SAACC,GAAD,OAAQ,OAADA,QAAC,IAADA,OAAA,EAAAA,EAAGzC,MAAOF,EAAOE,OAE9C,SAAC,IAAD,CACE0C,QAAS,eACTC,QAAO,mCAAE,WAAOC,GAAP,kFACDC,EAAAA,EAAAA,IAAiB,CAACC,OAAQ1C,EAAUiB,YAAYrB,GAAI+C,SAAUjD,EAAOE,KADpE,OAEPU,IAFO,2CAAF,sDAFT,2GASA,SAAC,IAAD,CACEgC,QAAS,eACTC,QAAO,mCAAE,WAAOC,GAAP,qEACJxC,EAAUiB,YADN,iCAEC2B,EAAAA,EAAAA,IAAkB,CAACF,OAAQ1C,EAAUiB,YAAYrB,GAAI+C,SAAUjD,EAAOE,KAFvE,OAGLU,IAHK,uBAKiB,IAAnBF,EAAUF,OACXG,EAAa,CAACH,MAAM,EAAMC,QAAS,uMACnC0C,YAAW,WACTxC,EAAa,CAACH,MAAM,EAAOC,QAAS,OACnC,MATA,2CAAF,sDAFT,wFAkBHC,EAAUF,OACT,SAAC,IAAD,CAAOoC,QAAQ,SAASpB,UAAU,6BAAlC,SAAgEd,EAAUD,mBAKlF,UAAC,IAAD,CAAKe,UAAU,yBAAf,WACE,iHACCxB,EAAOD,KAAKqD,KAAI,SAACrD,EAAMsD,GAAP,OACb,UAAC,IAAD,CAAmB5B,MAAO,CAACS,WAAYmB,EAAQ,IAAM,EAAI,YAAc,cAAeC,QAAS,IAA/F,UACKvD,EAAKwD,MADV,KACmBxD,EAAKyD,cADdzD,EAAKG,gBAS3B,a","sources":["pages/Device.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext, useCallback } from 'react';\r\nimport { Alert, Button, Card, Col, Container, Image, Row } from \"react-bootstrap\";\r\nimport bigStar from '../assets/bigStar.png'\r\nimport { fetchOneDevice } from './../http/deviceAPI';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Context } from './../index';\r\nimport { addDeviceToBasket, deleteFromBasket } from '../http/basketAPI';\r\nimport { fetchBasketDevices } from './../http/basketAPI';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst DevicePage = observer(() => {\r\n  const [device, setDevice] = useState({info: []});\r\n  const { id } = useParams();\r\n  const {userStore, basketStore} = useContext(Context);\r\n  const [showAlert, setShowAlert] = useState({\r\n    show: false,\r\n    message: ''\r\n  });\r\n  // fetch basket devices by specific user\r\n  const fetchBasketDevicesCallback = useCallback(\r\n    () => {\r\n      fetchBasketDevices(null, null, null, -1).then(data => {\r\n        basketStore.setTotalCount(data.count);\r\n        basketStore.setDevices(data.rows);\r\n      });\r\n    },\r\n    [],\r\n  );\r\n\r\n  useEffect(() => { \r\n    fetchOneDevice(id).then(device => setDevice(device));\r\n    if(userStore.currentUser) fetchBasketDevicesCallback();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <Container className=\"mt-3\" style={{position: 'relative'}}>\r\n      <Row>\r\n        <Col md={4}>\r\n          <Image width={300} height={300} src={process.env.REACT_APP_API_URL + device.img} />\r\n        </Col>\r\n        <Col md={4}>\r\n          <Row className=\"d-flex flex-column align-items-center\">\r\n            <h2>{device.name}</h2>\r\n            <div\r\n              className=\"d-flex align-items-center justify-content-center\"\r\n              style={{ background: `url(${bigStar}) no-repeat center center`, width: 240, height: 240, backgroundSize: 'cover', fontSize: 64 }}\r\n            >\r\n              {device.rating}\r\n            </div>\r\n          </Row>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card\r\n            className=\"d-flex flex-column align-items-center justify-content-around\"\r\n            style={{ width: 300, height: 300, fontSize: 32, border: '5px solid lightgray' }}\r\n          >\r\n            <h3>Від: {device.price} грн.</h3>\r\n            {basketStore.devices.some((d) => d?.id === device.id)\r\n              ?\r\n                <Button \r\n                  variant={\"outline-dark\"} \r\n                  onClick={async (e) => {\r\n                    await deleteFromBasket({userId: userStore.currentUser.id, deviceId: device.id});\r\n                    fetchBasketDevicesCallback();\r\n                  }}>\r\n                  Видалити з кошику\r\n                </Button>\r\n              :\r\n                <Button \r\n                  variant={\"outline-dark\"} \r\n                  onClick={async (e) => {\r\n                    if(userStore.currentUser) {\r\n                      await addDeviceToBasket({userId: userStore.currentUser.id, deviceId: device.id});\r\n                      fetchBasketDevicesCallback();\r\n                    } else {\r\n                      if(showAlert.show !== true) {\r\n                        setShowAlert({show: true, message: 'Щоб додати річ у кошик - авторизуйтесь.'});\r\n                        setTimeout(() => {\r\n                          setShowAlert({show: false, message: ''});\r\n                        }, 2000);\r\n                      }\r\n                    }\r\n                  }}>\r\n                  Додати у кошик\r\n                </Button>\r\n            }\r\n            {showAlert.show &&\r\n              <Alert variant=\"danger\" className='mt-2 alertCustom tinyAlert'>{showAlert.message}</Alert>\r\n            }\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"d-flex flex-column m-3\">\r\n        <h1>Характеристики</h1>\r\n        {device.info.map((info, index) =>\r\n            <Row key={info.id} style={{background: index % 2 === 0 ? 'lightgray' : 'transparent', padding: 10}}>\r\n                {info.title}: {info.description}\r\n            </Row>\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default DevicePage;"],"names":["DevicePage","observer","useState","info","device","setDevice","id","useParams","useContext","Context","userStore","basketStore","show","message","showAlert","setShowAlert","fetchBasketDevicesCallback","useCallback","fetchBasketDevices","then","data","setTotalCount","count","setDevices","rows","useEffect","fetchOneDevice","currentUser","className","style","position","md","width","height","src","process","img","name","background","bigStar","backgroundSize","fontSize","rating","border","price","devices","some","d","variant","onClick","e","deleteFromBasket","userId","deviceId","addDeviceToBasket","setTimeout","map","index","padding","title","description"],"sourceRoot":""}