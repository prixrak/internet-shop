{"version":3,"file":"static/js/805.260748c9.chunk.js","mappings":"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","sources":["components/adminModals/CreateBrand.jsx","components/adminModals/CreateDevice.jsx","components/adminModals/CreateType.jsx","pages/Admin.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { createBrand, deleteBrand, fetchBrands } from './../../http/filterAPI';\r\nimport { Context } from './../../index';\r\nimport  ButtonGroup  from 'react-bootstrap/ButtonGroup';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst CreateBrand = observer(({ show, onHide }) => {\r\n  const [value, setValue] = useState('');\r\n  const { filterStore } = useContext(Context);\r\n\r\n  const addBrand = () => {\r\n    createBrand({ name: value }).then(data => {\r\n      setValue('');\r\n      fetchBrands().then(brands => filterStore.setBrands(brands));\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Додати бренд\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Control\r\n            value={value}\r\n            onChange={e => setValue(e.target.value)}\r\n            placeholder={\"Введіть назву бренду\"}\r\n          />\r\n        </Form>\r\n        <Modal.Title id=\"modal-title-vcenter\">\r\n          Видалити бренд\r\n        </Modal.Title>\r\n        <ButtonGroup className='d-flex flex-wrap '>\r\n          {filterStore.brands.map(brand =>\r\n            <Button\r\n              className='d-block mr-2 mt-2 rounded'\r\n              style={{ cursor: 'no-drop' }}\r\n              onClick={() => {\r\n                if (window.confirm('Ви впевненні, що хочете видалити цей бренд?')) {\r\n                  deleteBrand(brand.id);\r\n                  filterStore.setBrands(filterStore.brands.filter(b => b.id !== brand.id));\r\n                } \r\n              }}\r\n              key={brand.id}\r\n            >\r\n              {brand.name}\r\n            </Button>\r\n          )}\r\n        </ButtonGroup>\r\n\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"outline-danger\" onClick={onHide}>Закрити</Button>\r\n        <Button variant=\"outline-success\" onClick={addBrand}>Додати</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n});\r\n\r\nexport default CreateBrand;","import React, { useContext, useState } from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Button, Dropdown, Form, Row, Col } from \"react-bootstrap\";\r\nimport { Context } from \"../../index\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { createDevice } from './../../http/deviceAPI';\r\nimport '../../styles/dropFile.css';\r\n\r\nconst CreateDevice = observer(({ show, onHide }) => {\r\n  const [name, setName] = useState('');\r\n  const [price, setPrice] = useState(0);\r\n  const [file, setFile] = useState(null);\r\n  const [info, setInfo] = useState([]);\r\n  \r\n  const { filterStore } = useContext(Context);\r\n\r\n  const addInfo = () => {\r\n    setInfo([...info, { title: '', description: '', number: Date.now() }])\r\n  }\r\n  \r\n  const removeInfo = (number) => {\r\n    setInfo(info.filter(i => i.number !== number))\r\n  }\r\n\r\n  const changeInfo = (key, value, number) => {\r\n    setInfo(info.map(i => i.number === number ? { ...i, [key]: value } : i))\r\n  }\r\n\r\n  const selectFile = e => {\r\n    setFile(e?.target.files[0]);\r\n  }\r\n\r\n  const addDevice = () => {\r\n    const formData = new FormData()\r\n    formData.append('name', name);\r\n    formData.append('price', `${price}`);\r\n    formData.append('img', file);\r\n    formData.append('brandId', filterStore.selectedBrand.id);\r\n    formData.append('typeId', filterStore.selectedType.id);\r\n    formData.append('info', JSON.stringify(info));\r\n    createDevice(formData).then(data => onHide());\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Додати пристрій\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Dropdown className=\"mt-2 mb-2\">\r\n            <Dropdown.Toggle>{filterStore.selectedType.name || \"Виберіть тип\"}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              {filterStore.types.map(type =>\r\n                <Dropdown.Item\r\n                  onClick={() => filterStore.setSelectedType(type)}\r\n                  key={type.id}\r\n                >\r\n                  {type.name}\r\n                </Dropdown.Item>\r\n              )}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <Dropdown className=\"mt-2 mb-2\">\r\n            <Dropdown.Toggle>{filterStore.selectedBrand.name || \"Виберіть бренд\"}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              {filterStore.brands.map(brand =>\r\n                <Dropdown.Item\r\n                  onClick={() => filterStore.setSelectedBrand(brand)}\r\n                  key={brand.id}\r\n                >\r\n                  {brand.name}\r\n                </Dropdown.Item>\r\n              )}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <Form.Control\r\n            value={name}\r\n            onChange={e => setName(e.target.value)}\r\n            className=\"mt-3\"\r\n            placeholder=\"Введіть назву пристрою\"\r\n          />\r\n          <Form.Control\r\n            value={price}\r\n            onChange={e => setPrice(Number(e.target.value))}\r\n            className=\"mt-3\"\r\n            placeholder=\"Введіть вартісь пристрою\"\r\n            type=\"number\"\r\n          />\r\n          <Form.Label \r\n            type=\"file\"\r\n            htmlFor=\"files\"\r\n            className='dropArea'\r\n          >\r\n            {file === null\r\n              ? <div className='fileText'>Drag and Drop or Choose File</div>\r\n              : <div className=''>Вибраний файл: {file?.name}</div>\r\n            }\r\n            <Form.Control\r\n              id=\"files\"\r\n              className=\"mt-3 inputFile\"\r\n              type=\"file\"\r\n              onChange={selectFile}\r\n              accept=\"image/*\"\r\n              onDrop={e => {\r\n                  e.preventDefault();\r\n                  e.target.files = e.dataTransfer.files;\r\n                  selectFile(e);\r\n                }\r\n              }\r\n            />\r\n          </Form.Label>\r\n          <hr />\r\n          <Button\r\n            variant={\"outline-dark\"}\r\n            onClick={addInfo}\r\n          >\r\n            Додати характеристику\r\n          </Button>\r\n          {info.map(i =>\r\n            <Row className=\"mt-4\" key={i.number}>\r\n              <Col md={4}>\r\n                <Form.Control\r\n                  value={i.title}\r\n                  onChange={(e) => changeInfo('title', e.target.value, i.number)}\r\n                  placeholder=\"Назва\"\r\n                />\r\n              </Col>\r\n              <Col md={4}>\r\n                <Form.Control\r\n                  value={i.description}\r\n                  onChange={(e) => changeInfo('description', e.target.value, i.number)}\r\n                  placeholder=\"Опис\"\r\n                />\r\n              </Col>\r\n              <Col md={4}>\r\n                <Button\r\n                  onClick={() => removeInfo(i.number)}\r\n                  variant={\"outline-danger\"}\r\n                >\r\n                  Видалити\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"outline-danger\" onClick={onHide}>Закрити</Button>\r\n        <Button variant=\"outline-success\" onClick={addDevice}>Додати</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n});\r\n\r\nexport default CreateDevice;","import React, { useState, useContext } from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { createType, deleteType, fetchTypes } from './../../http/filterAPI';\r\nimport { Context } from './../../index';\r\nimport  ButtonGroup  from 'react-bootstrap/ButtonGroup';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst CreateType = observer(({ show, onHide }) => {\r\n  const [value, setValue] = useState('')\r\n  const { filterStore } = useContext(Context);\r\n\r\n  const addType = () => {\r\n    createType({name: value}).then(data => {\r\n      setValue('');\r\n      fetchTypes().then(types => filterStore.setTypes(types));\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Додати тип\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Control\r\n            value={value}\r\n            onChange={e => setValue(e.target.value)}\r\n            placeholder={\"Введіть назву типу\"}\r\n          />\r\n        </Form>\r\n        <Modal.Title id=\"modal-title-vcenter\">\r\n          Видалити тип\r\n        </Modal.Title>\r\n        <ButtonGroup className='d-flex flex-wrap '>\r\n          {filterStore.types.map(type =>\r\n            <Button\r\n              className='d-block mr-2 mt-2 rounded'\r\n              style={{ cursor: 'no-drop' }}\r\n              onClick={() => {\r\n                if (window.confirm('Ви впевненні, що хочете видалити цей тип?')) {\r\n                  deleteType(type.id);\r\n                  filterStore.setTypes(filterStore.types.filter(t => t.id !== type.id));\r\n                } \r\n              }}\r\n              key={type.id}\r\n            >\r\n              {type.name}\r\n            </Button>\r\n          )}\r\n        </ButtonGroup>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"outline-danger\" onClick={onHide}>Закрити</Button>\r\n        <Button variant=\"outline-success\" onClick={addType}>Додати</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n});\r\n\r\nexport default CreateType;","import React, { useState, useContext, useEffect } from 'react';\r\nimport { Button, Container } from \"react-bootstrap\";\r\nimport CreateBrand from \"../components/adminModals/CreateBrand\";\r\nimport CreateDevice from \"../components/adminModals/CreateDevice\";\r\nimport CreateType from \"../components/adminModals/CreateType\";\r\nimport { fetchBrands, fetchTypes } from '../http/filterAPI';\r\nimport { Context } from './../index';\r\n\r\nconst Admin = () => {\r\n  const [brandVisible, setBrandVisible] = useState(false);\r\n  const [typeVisible, setTypeVisible] = useState(false);\r\n  const [deviceVisible, setDeviceVisible] = useState(false);\r\n\r\n  const { filterStore } = useContext(Context);\r\n\r\n  useEffect(() => {\r\n    fetchTypes().then(types => filterStore.setTypes(types))\r\n    fetchBrands().then(brands => filterStore.setBrands(brands))\r\n  }, []);\r\n\r\n  console.log(\"admin\")\r\n  return (\r\n    <Container className=\"d-flex flex-column\">\r\n      <Button\r\n        variant={\"outline-dark\"}\r\n        className=\"mt-4 p-2\"\r\n        onClick={() => setTypeVisible(true)}\r\n      >\r\n        Додати або видалити Тип\r\n      </Button>\r\n      <Button\r\n        variant={\"outline-dark\"}\r\n        className=\"mt-4 p-2\"\r\n        onClick={() => setBrandVisible(true)}\r\n      >\r\n        Додати або видалити Бренд\r\n      </Button>\r\n      <Button\r\n        variant={\"outline-dark\"}\r\n        className=\"mt-4 p-2\"\r\n        onClick={() => setDeviceVisible(true)}\r\n      >\r\n        Додати Пристрій\r\n      </Button>\r\n      <CreateBrand show={brandVisible} onHide={() => setBrandVisible(false)} />\r\n      <CreateDevice show={deviceVisible} onHide={() => setDeviceVisible(false)} />\r\n      <CreateType show={typeVisible} onHide={() => setTypeVisible(false)} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Admin;"],"names":["observer","show","onHide","useState","value","setValue","filterStore","useContext","Context","Modal","centered","closeButton","id","Form","onChange","e","target","placeholder","ButtonGroup","className","brands","map","brand","Button","style","cursor","onClick","window","confirm","deleteBrand","setBrands","filter","b","name","variant","createBrand","then","data","fetchBrands","setName","price","setPrice","file","setFile","info","setInfo","changeInfo","key","number","i","selectFile","files","Dropdown","selectedType","types","type","setSelectedType","selectedBrand","setSelectedBrand","Number","htmlFor","accept","onDrop","preventDefault","dataTransfer","title","description","Date","now","Row","Col","md","formData","FormData","append","JSON","stringify","createDevice","deleteType","setTypes","t","createType","fetchTypes","brandVisible","setBrandVisible","typeVisible","setTypeVisible","deviceVisible","setDeviceVisible","useEffect","console","log","Container"],"sourceRoot":""}